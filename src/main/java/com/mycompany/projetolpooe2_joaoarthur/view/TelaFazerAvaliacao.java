/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.projetolpooe2_joaoarthur.view;

import java.sql.*;
import javax.swing.*;

/**
 *
 * @author pedro
 */
public class TelaFazerAvaliacao extends javax.swing.JFrame {

    private int notaSelecionada;

    /**
     * Creates new form TelaFazerAvaliacao
     */
    public TelaFazerAvaliacao() {
        initComponents();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        starRating1.addEventStarRating(new EventStarRating() {
           @Override
           public void selected(int star) {
                notaSelecionada = star;  // Armazena a nota
                System.out.println("Nota selecionada: " + star);
           }
        });
        
        carregarNomesDoBanco();
        carregarLivrosDoBanco();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnValidarRegistrar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        starRating1 = new com.mycompany.projetolpooe2_joaoarthur.view.StarRating();
        comboNomes = new javax.swing.JComboBox<>();
        comboLivros = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Fazer Avaliação");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        jLabel2.setText("Nota:");

        jLabel3.setText("Descrição:");

        btnValidarRegistrar.setText("Validar e Registrar");
        btnValidarRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnValidarRegistrarActionPerformed(evt);
            }
        });

        jLabel4.setText("Seu nome:");

        jLabel5.setText("Livro:");

        comboLivros.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { " " }));
        comboLivros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboLivrosActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnValidarRegistrar))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel2))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(comboLivros, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(37, 37, 37)
                                        .addComponent(starRating1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(10, 10, 10)
                                .addComponent(comboNomes, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 3, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addComponent(jLabel1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(comboNomes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(comboLivros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(starRating1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnValidarRegistrar)
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void carregarNomesDoBanco() {
        Connection conn = null;
        PreparedStatement stmt = null;
        ResultSet rs = null;

        try {
            // Conectar ao banco de dados
            String url = "jdbc:postgresql://localhost:5432/ProjetoLPOOE2_JoaoArthur";
            String user = "postgres";
            String password = "jb12";
            conn = DriverManager.getConnection(url, user, password);

            // Consulta SQL para buscar nomes
            String sql = "SELECT nome FROM tb_usuario UNION SELECT nome FROM tb_funcionario";
            stmt = conn.prepareStatement(sql);
            rs = stmt.executeQuery();

            // Adicionar nomes ao comboNomes
            while (rs.next()) {
                comboNomes.addItem(rs.getString("nome")); // Adiciona os nomes dinamicamente
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Erro ao carregar nomes: " + e.getMessage());
        } finally {
            // Fechar conexões
            try {
                if (rs != null) rs.close();
                if (stmt != null) stmt.close();
                if (conn != null) conn.close();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }
    
    private void carregarLivrosDoBanco() {
    Connection conn = null;
    PreparedStatement stmt = null;
    ResultSet rs = null;

    try {
        // Conexão ao banco de dados
        String url = "jdbc:postgresql://localhost:5432/ProjetoLPOOE2_JoaoArthur";
        String user = "postgres";
        String password = "jb12";
        conn = DriverManager.getConnection(url, user, password);

        // Consulta para obter os títulos dos livros
        String sql = "SELECT titulo FROM tb_livro";
        stmt = conn.prepareStatement(sql);
        rs = stmt.executeQuery();

        // Adiciona os títulos dos livros ao comboLivros
        while (rs.next()) {
            comboLivros.addItem(rs.getString("titulo"));
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Erro ao carregar livros: " + e.getMessage());
    } finally {
        try {
            if (rs != null) rs.close();
            if (stmt != null) stmt.close();
            if (conn != null) conn.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
}
    
    private void btnValidarRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnValidarRegistrarActionPerformed

    Connection con = null;
PreparedStatement stmt = null;

try {
    // Captura os dados das ComboBox, JTextArea e da seleção de estrelas
    String nomeSelecionado = (String) comboNomes.getSelectedItem(); // Nome do usuário ou funcionário
    String livroSelecionado = (String) comboLivros.getSelectedItem(); // Livro selecionado
    String descricao = jTextArea1.getText(); // Texto da descrição
    int nota = notaSelecionada; // Nota selecionada (atribuída pelo evento do StarRating)

    // Validação dos campos
    if (nomeSelecionado == null || livroSelecionado == null || descricao.isEmpty() || nota == 0) {
        JOptionPane.showMessageDialog(this, "Por favor, preencha todos os campos antes de registrar a avaliação!");
        return;
    }

    // Conectar ao banco de dados
    con = DriverManager.getConnection(
        "jdbc:postgresql://localhost:5432/ProjetoLPOOE2_JoaoArthur",
        "postgres",
        "jb12"
    );

    // Buscar o ID do livro selecionado
    String queryLivro = "SELECT idlivro FROM tb_livro WHERE titulo = ?";
    int livroId = -1;

    try (PreparedStatement stmtLivro = con.prepareStatement(queryLivro)) {
        stmtLivro.setString(1, livroSelecionado);
        ResultSet rs = stmtLivro.executeQuery();
        if (rs.next()) {
            livroId = rs.getInt("idlivro");
        }
    }

    if (livroId == -1) {
        JOptionPane.showMessageDialog(this, "Livro selecionado não encontrado no banco de dados!");
        return;
    }

    // Verificar se o nome é de um usuário ou funcionário
    String queryPessoa = """
        SELECT idpessoa, tipo FROM (
            SELECT idpessoa, 'usuario' AS tipo FROM tb_usuario WHERE nome = ?
            UNION ALL
            SELECT idpessoa, 'funcionario' AS tipo FROM tb_funcionario WHERE nome = ?
        ) AS pessoas
    """;
    int pessoaId = -1;
    String tipoPessoa = "";

    try (PreparedStatement stmtPessoa = con.prepareStatement(queryPessoa)) {
        stmtPessoa.setString(1, nomeSelecionado);
        stmtPessoa.setString(2, nomeSelecionado);
        ResultSet rs = stmtPessoa.executeQuery();
        if (rs.next()) {
            pessoaId = rs.getInt("idpessoa");
            tipoPessoa = rs.getString("tipo");
        }
    }

    if (pessoaId == -1) {
        JOptionPane.showMessageDialog(this, "Pessoa selecionada não encontrada no banco de dados!");
        return;
    }

    // Consulta SQL para inserir a avaliação
    String sql = "INSERT INTO tb_avaliacao (descricao, nota, funcionario_id, usuario_id, livro_id) " +
                 "VALUES (?, ?, ?, ?, ?)";
    stmt = con.prepareStatement(sql);

    // Define os parâmetros
    stmt.setString(1, descricao);
    stmt.setInt(2, nota);

    if ("usuario".equals(tipoPessoa)) {
        stmt.setNull(3, java.sql.Types.INTEGER); // Sem funcionário
        stmt.setInt(4, pessoaId); // ID do usuário
    } else {
        stmt.setInt(3, pessoaId); // ID do funcionário
        stmt.setNull(4, java.sql.Types.INTEGER); // Sem usuário
    }

    stmt.setInt(5, livroId); // ID do livro

    // Executa a inserção
    stmt.executeUpdate();
    JOptionPane.showMessageDialog(this, "Avaliação registrada com sucesso!");

} catch (SQLException e) {
    e.printStackTrace();
    JOptionPane.showMessageDialog(this, "Erro ao registrar avaliação: " + e.getMessage());
} finally {
    try {
        if (stmt != null) stmt.close();
        if (con != null) con.close();
    } catch (SQLException ex) {
        ex.printStackTrace();
    }
}


    }//GEN-LAST:event_btnValidarRegistrarActionPerformed

    
    
    private void comboLivrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboLivrosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboLivrosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaFazerAvaliacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaFazerAvaliacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaFazerAvaliacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaFazerAvaliacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaFazerAvaliacao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnValidarRegistrar;
    private javax.swing.JComboBox<String> comboLivros;
    private javax.swing.JComboBox<String> comboNomes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private com.mycompany.projetolpooe2_joaoarthur.view.StarRating starRating1;
    // End of variables declaration//GEN-END:variables
}
